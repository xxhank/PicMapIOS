//
//  CameraConfigurator.swift
//  PicMapIOS
//
//  Created by wangchaojs02 on 16/1/30.
//  Copyright (c) 2016å¹´ wangchaojs02. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so you can apply
//  clean architecture to your iOS and Mac projects, see http://clean-swift.com
//

import UIKit

// MARK: Connect View, Interactor, and Presenter

extension CameraViewController: CameraPresenterOutput
{
    override func prepareForSegue(segue: UIStoryboardSegue, sender: AnyObject?)
    {
        router.passDataToNextScene(segue)
    }
}

extension CameraInteractor: CameraViewControllerOutput
{
}

extension CameraPresenter: CameraInteractorOutput
{
}

class CameraConfigurator
{
    // MARK: Object lifecycle
    
    class var sharedInstance: CameraConfigurator
    {
        struct Static {
            static var instance: CameraConfigurator?
            static var token: dispatch_once_t = 0
        }
        
        dispatch_once(&Static.token) {
            Static.instance = CameraConfigurator()
        }
        
        return Static.instance!
    }
    
    // MARK: Configuration
    
    func configure(viewController: CameraViewController)
    {
        let router = CameraRouter()
        router.viewController = viewController
        
        let presenter = CameraPresenter()
        presenter.output = viewController
        
        let interactor = CameraInteractor()
        interactor.output = presenter
        
        viewController.output = interactor
        viewController.router = router
    }
}
