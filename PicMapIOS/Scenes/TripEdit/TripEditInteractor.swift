//
//  TripEditInteractor.swift
//  PicMapIOS
//
//  Created by wangchaojs02 on 16/3/13.
//  Copyright (c) 2016å¹´ wangchaojs02. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so you can apply
//  clean architecture to your iOS and Mac projects, see http://clean-swift.com
//

import UIKit

enum TripEditInteractorError: ErrorType {
    case General
    case InvalidTripModel
}

protocol TripEditInteractorOutput
{
    func presentTripModel(response: Response<TripEditFormatModelResponse>)
}

class TripEditInteractor: TripEditInteractorInput
{
    var output: TripEditInteractorOutput!
    var worker: TripEditWorker!

    var tripModel: [String: [PhotoGroup]]?
    // MARK: - Business logic
    func formatModel(request: TripEditFormatModelRequest) {
        if let tripModel = tripModel {
            output.presentTripModel(Response.Result(TripEditFormatModelResponse(tripModel: tripModel)))
        } else {
            output.presentTripModel(Response.Error(NSError(errorType: TripEditInteractorError.InvalidTripModel)))
        }
    }

    func saveTrip() {

        guard let tripModel = tripModel else { return }

        let path = NSTemporaryDirectory() + "/trip/\(Int64(NSDate().timeIntervalSince1970*1000)).plist"
        try! NSFileManager.defaultManager().createDirectoryAtPath(path, withIntermediateDirectories: true, attributes: nil)

        let photoGroups = tripModel["photos"]!
        var persistentTripModel = [[String: AnyObject]]()
        for photoGroup in photoGroups {
            var persistentPhotos = [String]()
            for photo in photoGroup.photos {
                persistentPhotos.append(photo.identifier)
            }

            persistentTripModel.append(["group-identifier": photoGroup.identifier
            , "photos": persistentPhotos])
        }

        (persistentTripModel as NSArray).writeToFile(path, atomically: true)
    }
    func cacheTrip() {
    }
}